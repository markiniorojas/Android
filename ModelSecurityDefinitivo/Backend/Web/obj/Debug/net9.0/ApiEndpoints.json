[
  {
    "ContainingType": "Web.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "api/Auth",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "Entity.DTOs.Write.LoginDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 401
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Web.Controllers.AuthController",
    "Method": "LoginGoogle",
    "RelativePath": "api/Auth/google",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tokenDto",
        "Type": "Entity.DTOs.Write.GoogleDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Web.Controllers.AuthController",
    "Method": "RegisterWithGoogle",
    "RelativePath": "api/Auth/google/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "Entity.DTOs.Write.RegisterDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Web.Controllers.FormController",
    "Method": "GetAll",
    "RelativePath": "api/Form",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Entity.DTOs.Read.RolDTO, Entity, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Web.Controllers.FormController",
    "Method": "Create",
    "RelativePath": "api/Form",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "Entity.DTOs.Read.FormDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Entity.DTOs.Read.FormDTO",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 201
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Web.Controllers.FormController",
    "Method": "Update",
    "RelativePath": "api/Form",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "Entity.DTOs.Read.FormDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Entity.DTOs.Read.RolDTO",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Web.Controllers.FormController",
    "Method": "GetById",
    "RelativePath": "api/Form/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Web.Controllers.FormController",
    "Method": "Delete",
    "RelativePath": "api/Form/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "tipo",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Web.Controllers.FormModuleController",
    "Method": "GetAll",
    "RelativePath": "api/FormModule",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Entity.DTOs.Read.UserDTO, Entity, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Web.Controllers.FormModuleController",
    "Method": "Create",
    "RelativePath": "api/FormModule",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "Entity.DTOs.Write.FormModuleWriteDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Entity.DTOs.Write.FormModuleWriteDTO",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 201
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Web.Controllers.FormModuleController",
    "Method": "Update",
    "RelativePath": "api/FormModule",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "Entity.DTOs.Write.FormModuleWriteDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Entity.DTOs.Write.FormModuleWriteDTO",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Web.Controllers.FormModuleController",
    "Method": "GetById",
    "RelativePath": "api/FormModule/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Web.Controllers.FormModuleController",
    "Method": "Delete",
    "RelativePath": "api/FormModule/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "tipo",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Web.Controllers.ModuleController",
    "Method": "GetAll",
    "RelativePath": "api/Module",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Entity.DTOs.Read.PersonDTO, Entity, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Web.Controllers.ModuleController",
    "Method": "CreatePerson",
    "RelativePath": "api/Module",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "ModuleDTO",
        "Type": "Entity.DTOs.Read.ModuleDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Entity.DTOs.Read.ModuleDTO",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 201
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Web.Controllers.ModuleController",
    "Method": "UpdatePerson",
    "RelativePath": "api/Module",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "ModuleDTO",
        "Type": "Entity.DTOs.Read.ModuleDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Entity.DTOs.Read.ModuleDTO",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Web.Controllers.ModuleController",
    "Method": "GetById",
    "RelativePath": "api/Module/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Web.Controllers.ModuleController",
    "Method": "Delete",
    "RelativePath": "api/Module/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "tipo",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Web.Controllers.PermissionController",
    "Method": "GetAll",
    "RelativePath": "api/Permission",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Entity.DTOs.Read.PermissionDTO, Entity, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Web.Controllers.PermissionController",
    "Method": "Create",
    "RelativePath": "api/Permission",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "Entity.DTOs.Read.PermissionDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Entity.DTOs.Read.FormDTO",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 201
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Web.Controllers.PermissionController",
    "Method": "Update",
    "RelativePath": "api/Permission",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "Entity.DTOs.Read.PermissionDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Entity.DTOs.Read.RolDTO",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Web.Controllers.PermissionController",
    "Method": "GetById",
    "RelativePath": "api/Permission/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Web.Controllers.PermissionController",
    "Method": "Delete",
    "RelativePath": "api/Permission/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "tipo",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Web.Controllers.PersonController",
    "Method": "GetAll",
    "RelativePath": "api/Person",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Entity.DTOs.Read.PersonDTO, Entity, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Web.Controllers.PersonController",
    "Method": "CreatePerson",
    "RelativePath": "api/Person",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "personDTO",
        "Type": "Entity.DTOs.Read.PersonDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Entity.DTOs.Read.PersonDTO",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 201
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Web.Controllers.PersonController",
    "Method": "UpdatePerson",
    "RelativePath": "api/Person",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "personDTO",
        "Type": "Entity.DTOs.Read.PersonDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Entity.DTOs.Read.PersonDTO",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Web.Controllers.PersonController",
    "Method": "GetPersonById",
    "RelativePath": "api/Person/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Web.Controllers.PersonController",
    "Method": "Delete",
    "RelativePath": "api/Person/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "tipo",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Web.Controllers.RolController",
    "Method": "GetAll",
    "RelativePath": "api/Rol",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Entity.DTOs.Read.RolDTO, Entity, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Web.Controllers.RolController",
    "Method": "Create",
    "RelativePath": "api/Rol",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "Entity.DTOs.Read.RolDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Entity.DTOs.Read.FormDTO",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 201
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Web.Controllers.RolController",
    "Method": "Update",
    "RelativePath": "api/Rol",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "Entity.DTOs.Read.RolDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Entity.DTOs.Read.RolDTO",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Web.Controllers.RolController",
    "Method": "GetById",
    "RelativePath": "api/Rol/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Web.Controllers.RolController",
    "Method": "Delete",
    "RelativePath": "api/Rol/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "tipo",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Web.Controllers.RolFormPermissionController",
    "Method": "GetAll",
    "RelativePath": "api/RolFormPermission",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Entity.DTOs.Read.UserDTO, Entity, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Web.Controllers.RolFormPermissionController",
    "Method": "Create",
    "RelativePath": "api/RolFormPermission",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "Entity.DTOs.Write.RolFormPermissionWriteDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Entity.DTOs.Write.RolFormPermissionWriteDTO",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 201
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Web.Controllers.RolFormPermissionController",
    "Method": "Update",
    "RelativePath": "api/RolFormPermission",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "Entity.DTOs.Write.RolFormPermissionWriteDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Entity.DTOs.Write.RolFormPermissionWriteDTO",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Web.Controllers.RolFormPermissionController",
    "Method": "GetById",
    "RelativePath": "api/RolFormPermission/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Web.Controllers.RolFormPermissionController",
    "Method": "Delete",
    "RelativePath": "api/RolFormPermission/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "tipo",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Web.Controllers.RolUserController",
    "Method": "GetAll",
    "RelativePath": "api/RolUser",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Entity.DTOs.Read.UserDTO, Entity, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Web.Controllers.RolUserController",
    "Method": "Create",
    "RelativePath": "api/RolUser",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "Entity.DTOs.Write.RolUserWriteDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Entity.DTOs.Write.RolUserWriteDTO",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 201
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Web.Controllers.RolUserController",
    "Method": "Update",
    "RelativePath": "api/RolUser",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "Entity.DTOs.Write.RolUserWriteDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Entity.DTOs.Write.RolUserWriteDTO",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Web.Controllers.RolUserController",
    "Method": "GetById",
    "RelativePath": "api/RolUser/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Web.Controllers.RolUserController",
    "Method": "Delete",
    "RelativePath": "api/RolUser/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "tipo",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Web.Controllers.UserController",
    "Method": "GetAll",
    "RelativePath": "api/User",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Entity.DTOs.Read.UserDTO, Entity, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Web.Controllers.UserController",
    "Method": "Create",
    "RelativePath": "api/User",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "Entity.DTOs.Write.UserWriteDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Entity.DTOs.Read.FormDTO",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 201
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Web.Controllers.UserController",
    "Method": "Update",
    "RelativePath": "api/User",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "Entity.DTOs.Write.UserWriteDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Entity.DTOs.Write.UserWriteDTO",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Web.Controllers.UserController",
    "Method": "GetById",
    "RelativePath": "api/User/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "application/json"
        ],
        "StatusCode": 404
      },
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 500
      }
    ]
  },
  {
    "ContainingType": "Web.Controllers.UserController",
    "Method": "Delete",
    "RelativePath": "api/User/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "tipo",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  }
]